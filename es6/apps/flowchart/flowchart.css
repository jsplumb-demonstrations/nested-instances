:root {

    --jtk-component-outline: #1b1b1b;
    --jtk-component-select: yellowgreen;
    /*
    The space between the frame around a selected node and the node itself. Specify this as a negative value if you change it. Unless you want the
    frame inside the element, I guess.
  */
    --jtk-draw-skeleton-padding:-0.6rem;

    --flowchartBuilderDragHover:orangered;
    --flowchartBuilderShapeOutline:var(--jtk-component-outline);
    --flowchartBuilderDeleteButtonBackground:#d83f3f;
    --flowchartBuilderDeleteButtonForeground:white;
    --flowchartBuilderConnectButtonBackground:#84acb3;
    --flowchartBuilderConnectButtonForeground:white;

    --flowchartBuilderGridLine:#aaa;

    --flowchartBuilderPaletteBorder:var(--jtk-component-outline);
}

.flowchart-object {
    z-index: 11;
    border: none;
    overflow: visible;
    display:flex;
    align-items: center;
    justify-content: center;
    background-color:transparent;
}

.flowchart-object svg {
    position: absolute;
    left: 0;
    top: 0;
}

.flowchart-object span {
    font-family: sans-serif;
    font-size: 1rem;
    font-weight: 400;
    z-index:12;
    white-space: nowrap;
}

.flowchart-object .node-action {
    display: none;
    position: absolute;
    top: -1rem;
    cursor: pointer;
    z-index: 12;
    left: auto;
    color:white;
    transition:transform 0.1s;
    font-family: sans-serif;
    text-align: center;
    opacity:0.9;

}

.flowchart-object .node-action:hover {
    transform: scale(1.3, 1.3);
}

.flowchart-object .node-delete {
    right: 4px;
    background-color: #d83f3f;
}

.flowchart-object.jtk-surface-selected-element .node-action {
    display: block;
    width: 15px;
    height: 15px;
    top:-20px;
    cursor:pointer;
    line-height: 15px;

}

.flowchart-object .connect {
    position:absolute;
    left:50%;
    margin-left:-7.5px;
    background-color:rgb(132, 172, 179);
    transition:transform 0.1s;
}

.flowchart-object .connect:hover {
    transform: scale(1.2, 1.2);
    opacity:1;
}

.flowchart-object .delete:after {
    content:"x";
    text-transform: uppercase;
}

.flowchart-object .node-edit:after {
    content:"âœŽ";
    text-transform: uppercase;
}

.connection-drop svg {
    fill:#CCC;
}

.connection-drop text {
    fill:black;
}

/*
    Assigned to the element that is drawn around some other element when a drawing operation is taking place.
*/
.jtk-draw-skeleton {
    position: absolute;
    left: var(--jtk-draw-skeleton-padding);
    right: -0.6rem;
    top: -0.6rem;
    bottom: -0.6rem;
    outline: 0.125rem solid var(--jtk-component-select);
    opacity: 0.8;
}

/*
    Assigned to every handle (top left, top right, bottom left, bottom right, center) in a draw skeleton.
*/
.jtk-draw-handle {
    position: absolute;
    width: 0.6rem;
    height: 0.6rem;
    border-radius:50%;
    background-color: var(--jtk-component-select);
}

/*
    Assigned to the top left handle in a draw skeleton
*/
.jtk-draw-handle-tl {
    left: -0.3rem;
    top: -0.3rem;
    cursor: nw-resize;
}

/*
    Assigned to the top right handle in a draw skeleton
*/
.jtk-draw-handle-tr {
    right: -0.3rem;
    top: -0.3rem;
    cursor: ne-resize;
}

/*
    Assigned to the bottom left handle in a draw skeleton
*/
.jtk-draw-handle-bl {
    left: -0.3rem;
    bottom: -0.3rem;
    cursor: sw-resize;
}

/*
    Assigned to the bottom right handle in a draw skeleton
*/
.jtk-draw-handle-br {
    bottom: -0.3rem;
    right: -0.3rem;
    cursor: se-resize;
}

.jtk-anchor-placeholder {
    z-index:13;
}

/*
  The small discs from which the user can drag new connections. TODO not scoped to flowchart really.
 */
.jtk-connect {
    cursor: pointer;
    background-color: var(--jtk-component-select);
    transition: transform 0.1s;
    position:absolute;
    z-index:1; /* to ensure it appears above the draw skeleton */
    width: 1.5rem;
    height: 1.5rem;
    align-items: center;
    justify-content: center;
    color: var(--flowchartBuilderConnectButtonForeground);
    border-radius: 50%;
    opacity:0.8;
    display: none;
}

.jtk-connect-left {
    left:0;
    top:50%;
    transform: translate(-50%, -50%);
}

.jtk-connect-right {
    right:0;
    top:50%;
    transform: translate(50%, -50%);
}

.jtk-connect-top {
    left:50%;
    top:0;
    transform: translate(-50%, -50%);
}

.jtk-connect-bottom {
    left:50%;
    bottom:0;
    transform: translate(-50%, 50%);
}

/**
  Show connect elements on hover
 */
.jtk-node:hover > .jtk-connect, .jtk-drag-selected .jtk-connect, .jtk-surface-touch-device .jtk-connect {
    display: flex;
}
